{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"/Users/tiffanybouchard/Desktop/workspace.nosync/ojos/web/components/ModalSubscribe/ModalSubscribe.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { Modal, Button, Form, FormControl } from \"react-bootstrap\";\nimport styles from './ModalSubscribe.module.css';\n\nfunction ModalSubscribe(props) {\n  _s();\n\n  var input = React.useRef(null);\n\n  var _React$useState = React.useState(\"\"),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      message = _React$useState2[0],\n      setMessage = _React$useState2[1];\n\n  var subscribe = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(e) {\n      var res, _yield$res$json, error;\n\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              e.preventDefault();\n              _context.next = 3;\n              return fetch(\"/api/subscribe\", {\n                body: JSON.stringify({\n                  email: input.current.value\n                }),\n                headers: {\n                  \"Content-Type\": \"application/json\"\n                },\n                method: \"POST\"\n              });\n\n            case 3:\n              res = _context.sent;\n              _context.next = 6;\n              return res.json();\n\n            case 6:\n              _yield$res$json = _context.sent;\n              error = _yield$res$json.error;\n\n              if (!error) {\n                _context.next = 11;\n                break;\n              }\n\n              setMessage(error);\n              return _context.abrupt(\"return\");\n\n            case 11:\n              localStorage.setItem(\"subscribed\", true);\n              input.current.value = \"\";\n              setMessage(\"Success! ðŸŽ‰ You are now subscribed to the newsletter.\");\n\n            case 14:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function subscribe(_x) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  var closeButtonClicked = function closeButtonClicked() {\n    sessionStorage.setItem(\"closeButtonClicked\", true);\n  };\n\n  return __jsx(Modal, _extends({}, props, {\n    size: \"xl\",\n    \"aria-labelledby\": \"contained-modal-title-vcenter\",\n    centered: true,\n    className: styles.modal,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 5\n    }\n  }), __jsx(Modal.Header, {\n    closeButton: true,\n    onClick: closeButtonClicked,\n    className: styles.header,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }\n  }), __jsx(Modal.Body, {\n    style: {\n      backgroundColor: \"#c4dbc8\",\n      height: \"180px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }\n  }, __jsx(\"h4\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }\n  }, message ? message : \"Join the list for exclusive details on products and releases\"), __jsx(Form, {\n    className: styles.form,\n    onSubmit: subscribe,\n    inline: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }\n  }, __jsx(FormControl, {\n    type: \"email\",\n    placeholder: \"Email\",\n    name: \"email\",\n    ref: input,\n    style: {\n      borderBottom: \"none\",\n      backgroundColor: \"#c4dbc8\",\n      border: \"1px solid black\",\n      borderRadius: \"0px\",\n      width: \"50%\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 11\n    }\n  }), __jsx(Button, {\n    style: {\n      borderBottom: \"none\",\n      backgroundColor: \"#c4dbc8\",\n      border: \"1px solid black\",\n      borderRadius: \"0px\",\n      color: \"black\",\n      margin: \"5px\"\n    },\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 11\n    }\n  }, \"Subscribe\"))));\n}\n\n_s(ModalSubscribe, \"Ds4DBHydvqEKEMJJAnL4xfGgD70=\");\n\n_c = ModalSubscribe;\nexport default ModalSubscribe;\n\nvar _c;\n\n$RefreshReg$(_c, \"ModalSubscribe\");","map":{"version":3,"sources":["/Users/tiffanybouchard/Desktop/workspace.nosync/ojos/web/components/ModalSubscribe/ModalSubscribe.js"],"names":["Modal","Button","Form","FormControl","styles","ModalSubscribe","props","input","React","useRef","useState","message","setMessage","subscribe","e","preventDefault","fetch","body","JSON","stringify","email","current","value","headers","method","res","json","error","localStorage","setItem","closeButtonClicked","sessionStorage","modal","header","backgroundColor","height","form","borderBottom","border","borderRadius","width","color","margin"],"mappings":"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","sourcesContent":["import { Modal, Button, Form, FormControl } from \"react-bootstrap\";\n\nimport styles from './ModalSubscribe.module.css';\n\nfunction ModalSubscribe(props) {\n  const input = React.useRef(null);\n\n  const [message, setMessage] = React.useState(\"\");\n\n  const subscribe = async (e) => {\n    e.preventDefault();\n\n    const res = await fetch(\"/api/subscribe\", {\n      body: JSON.stringify({\n        email: input.current.value,\n      }),\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      method: \"POST\",\n    });\n    const { error } = await res.json();\n\n    if (error) {\n      setMessage(error);\n      return;\n    }\n    localStorage.setItem(\"subscribed\", true);\n    input.current.value = \"\";\n    setMessage(\"Success! ðŸŽ‰ You are now subscribed to the newsletter.\");\n  };\n\n  const closeButtonClicked = () => {\n    sessionStorage.setItem(\"closeButtonClicked\", true);\n  };\n\n  return (\n    <Modal\n      {...props}\n      size=\"xl\"\n      aria-labelledby=\"contained-modal-title-vcenter\"\n      centered\n      className={styles.modal}\n    >\n      <Modal.Header\n        closeButton\n        onClick={closeButtonClicked}\n        className={styles.header}\n      />\n      <Modal.Body\n        style={{\n          backgroundColor: \"#c4dbc8\",\n          height: \"180px\",\n        }}\n      >\n        <h4>\n          {message\n            ? message\n            : `Join the list for exclusive details on products and releases`}\n        </h4>\n\n        <Form className={styles.form} onSubmit={subscribe} inline>\n          <FormControl\n            type=\"email\"\n            placeholder=\"Email\"\n            name=\"email\"\n            ref={input}\n            style={{\n              borderBottom: \"none\",\n              backgroundColor: \"#c4dbc8\",\n              border: \"1px solid black\",\n              borderRadius: \"0px\",\n              width: \"50%\",\n            }}\n          />\n          <Button\n            style={{\n              borderBottom: \"none\",\n              backgroundColor: \"#c4dbc8\",\n              border: \"1px solid black\",\n              borderRadius: \"0px\",\n              color: \"black\",\n              margin: \"5px\",\n            }}\n            type=\"submit\"\n          >\n            Subscribe\n          </Button>\n        </Form>\n      </Modal.Body>\n    </Modal>\n  );\n}\n\nexport default ModalSubscribe;\n"]},"metadata":{},"sourceType":"module"}