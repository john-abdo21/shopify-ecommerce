{"ast":null,"code":"export default (async (req, res) => {\n  // 1. Destructure the email address from the request body.\n  const {\n    email\n  } = req.body;\n\n  if (!email) {\n    return res.status(400).json({\n      error: \"Email is required\"\n    });\n  }\n\n  try {\n    const LIST_ID = process.env.MAILCHIMP_LIST_ID;\n    const API_KEY = process.env.MAILCHIMP_API_KEY;\n    const DATACENTER = process.env.DATACENTER;\n    const data = {\n      email_address: email,\n      status: \"subscribed\"\n    };\n    const response = await fetch(`https://${DATACENTER}.api.mailchimp.com/3.0/lists/${LIST_ID}/members`, {\n      body: JSON.stringify(data),\n      headers: {\n        Authorization: `apikey ${API_KEY}`,\n        \"Content-Type\": \"application/json\"\n      },\n      method: \"POST\"\n    });\n\n    if (response.status >= 400) {\n      return res.status(400).json({\n        error: `There was an error subscribing to the newsletter. Shoot me an email at isojos@icloud.com and I'll add you to the list.`\n      });\n    }\n\n    return res.status(201).json({\n      error: \"\"\n    });\n  } catch (error) {\n    return res.status(500).json({\n      error: error.message || error.toString()\n    });\n  }\n});","map":{"version":3,"sources":["/Users/tiffanybouchard/Desktop/workspace.nosync/ojos/web/pages/api/subscribe.js"],"names":["req","res","email","body","status","json","error","LIST_ID","process","env","MAILCHIMP_LIST_ID","API_KEY","MAILCHIMP_API_KEY","DATACENTER","data","email_address","response","fetch","JSON","stringify","headers","Authorization","method","message","toString"],"mappings":"AAAA,gBAAe,OAAOA,GAAP,EAAYC,GAAZ,KAAoB;AACjC;AACA,QAAM;AAAEC,IAAAA;AAAF,MAAYF,GAAG,CAACG,IAAtB;;AAEA,MAAI,CAACD,KAAL,EAAY;AACV,WAAOD,GAAG,CAACG,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAAEC,MAAAA,KAAK,EAAE;AAAT,KAArB,CAAP;AACD;;AAED,MAAI;AACF,UAAMC,OAAO,GAAGC,OAAO,CAACC,GAAR,CAAYC,iBAA5B;AACA,UAAMC,OAAO,GAAGH,OAAO,CAACC,GAAR,CAAYG,iBAA5B;AACA,UAAMC,UAAU,GAAGL,OAAO,CAACC,GAAR,CAAYI,UAA/B;AAEA,UAAMC,IAAI,GAAG;AACXC,MAAAA,aAAa,EAAEb,KADJ;AAEXE,MAAAA,MAAM,EAAE;AAFG,KAAb;AAKA,UAAMY,QAAQ,GAAG,MAAMC,KAAK,CACzB,WAAUJ,UAAW,gCAA+BN,OAAQ,UADnC,EAE1B;AACEJ,MAAAA,IAAI,EAAEe,IAAI,CAACC,SAAL,CAAeL,IAAf,CADR;AAEEM,MAAAA,OAAO,EAAE;AACPC,QAAAA,aAAa,EAAG,UAASV,OAAQ,EAD1B;AAEP,wBAAgB;AAFT,OAFX;AAMEW,MAAAA,MAAM,EAAE;AANV,KAF0B,CAA5B;;AAYA,QAAIN,QAAQ,CAACZ,MAAT,IAAmB,GAAvB,EAA4B;AAC1B,aAAOH,GAAG,CAACG,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAC1BC,QAAAA,KAAK,EAAG;AADkB,OAArB,CAAP;AAGD;;AAED,WAAOL,GAAG,CAACG,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAAEC,MAAAA,KAAK,EAAE;AAAT,KAArB,CAAP;AACD,GA7BD,CA6BE,OAAOA,KAAP,EAAc;AACd,WAAOL,GAAG,CAACG,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAAEC,MAAAA,KAAK,EAAEA,KAAK,CAACiB,OAAN,IAAiBjB,KAAK,CAACkB,QAAN;AAA1B,KAArB,CAAP;AACD;AACF,CAxCD","sourcesContent":["export default async (req, res) => {\n  // 1. Destructure the email address from the request body.\n  const { email } = req.body;\n\n  if (!email) {\n    return res.status(400).json({ error: \"Email is required\" });\n  }\n\n  try {\n    const LIST_ID = process.env.MAILCHIMP_LIST_ID;\n    const API_KEY = process.env.MAILCHIMP_API_KEY;\n    const DATACENTER = process.env.DATACENTER;\n\n    const data = {\n      email_address: email,\n      status: \"subscribed\",\n    };\n\n    const response = await fetch(\n      `https://${DATACENTER}.api.mailchimp.com/3.0/lists/${LIST_ID}/members`,\n      {\n        body: JSON.stringify(data),\n        headers: {\n          Authorization: `apikey ${API_KEY}`,\n          \"Content-Type\": \"application/json\",\n        },\n        method: \"POST\",\n      }\n    );\n\n    if (response.status >= 400) {\n      return res.status(400).json({\n        error: `There was an error subscribing to the newsletter. Shoot me an email at isojos@icloud.com and I'll add you to the list.`,\n      });\n    }\n\n    return res.status(201).json({ error: \"\" });\n  } catch (error) {\n    return res.status(500).json({ error: error.message || error.toString() });\n  }\n};\n"]},"metadata":{},"sourceType":"module"}