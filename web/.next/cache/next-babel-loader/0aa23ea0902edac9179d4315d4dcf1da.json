{"ast":null,"code":"var _jsxFileName = \"/Users/tiffanybouchard/Desktop/workspace.nosync/ojos/web/components/ContactForm/ContactForm.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport emailjs from \"emailjs-com\";\nconst TEMPLATE_ID = process.env.EMAILJS_TEMPLATE_ID;\nconst USER_ID = process.env.EMAILJS_USER_ID;\nconst SERVICE_ID = process.env.EMAILJS_SERVICE_ID;\n\nclass Form extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {\n      name: \"\",\n      email: \"\",\n      message: \"\",\n      response: \"\"\n    });\n\n    _defineProperty(this, \"handleSubmit\", e => {\n      e.preventDefault();\n      const {\n        name,\n        email,\n        message\n      } = this.state;\n      let templateParams = {\n        from_name: email,\n        to_name: \"OJOS\",\n        message_html: message,\n        reply_to: email\n      };\n      this.sendEmail(templateParams);\n    });\n\n    _defineProperty(this, \"sendEmail\", templateParams => {\n      emailjs.send(SERVICE_ID, TEMPLATE_ID, templateParams, USER_ID).then(response => {\n        this.setState({\n          response: response.status + \" \" + response.text\n        });\n        this.resetForm();\n        console.log('SUCCESS!', response.status, response.text);\n      }, error => {\n        this.setState({\n          response: error.text\n        });\n        console.log('FAILED...', error);\n      });\n    });\n\n    _defineProperty(this, \"handleChange\", e => {\n      this.setState({\n        [e.target.name]: e.target.value\n      });\n    });\n  }\n\n  resetForm() {\n    this.setState({\n      name: \"\",\n      email: \"\",\n      message: \"\"\n    });\n  }\n\n  render() {\n    return __jsx(\"section\", {\n      className: \"sub-section\",\n      id: \"contact\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 7\n      }\n    }, __jsx(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }\n    }, __jsx(\"form\", {\n      className: \"contact-form\",\n      onSubmit: this.handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 11\n      }\n    }, __jsx(\"input\", {\n      type: \"text\",\n      name: \"name\",\n      value: this.state.name,\n      onChange: this.handleChange,\n      placeholder: \"Name\",\n      className: \"contact-form-input\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 13\n      }\n    }), __jsx(\"input\", {\n      required: true,\n      type: \"email\",\n      name: \"email\",\n      value: this.state.email,\n      onChange: this.handleChange,\n      placeholder: \"Email\",\n      className: \"contact-form-input\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 13\n      }\n    }), __jsx(\"textarea\", {\n      required: true,\n      rows: \"10\",\n      name: \"message\",\n      value: this.state.message,\n      onChange: this.handleChange,\n      placeholder: \"Message\",\n      className: \"contact-form-input\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 13\n      }\n    }), __jsx(\"button\", {\n      type: \"submit\",\n      className: \"contact-form-input-button\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 13\n      }\n    }, \"Send\"), __jsx(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 13\n      }\n    }, this.state.response ? this.state.response : \" \"))));\n  }\n\n}\n\nexport default Form;","map":{"version":3,"sources":["/Users/tiffanybouchard/Desktop/workspace.nosync/ojos/web/components/ContactForm/ContactForm.js"],"names":["emailjs","TEMPLATE_ID","process","env","EMAILJS_TEMPLATE_ID","USER_ID","EMAILJS_USER_ID","SERVICE_ID","EMAILJS_SERVICE_ID","Form","React","Component","name","email","message","response","e","preventDefault","state","templateParams","from_name","to_name","message_html","reply_to","sendEmail","send","then","setState","status","text","resetForm","console","log","error","target","value","render","handleSubmit","handleChange"],"mappings":"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","sourcesContent":["import emailjs from \"emailjs-com\";\n\nconst TEMPLATE_ID = process.env.EMAILJS_TEMPLATE_ID;\nconst USER_ID = process.env.EMAILJS_USER_ID;\nconst SERVICE_ID = process.env.EMAILJS_SERVICE_ID;\n\nclass Form extends React.Component {\n  state = {\n    name: \"\",\n    email: \"\",\n    message: \"\",\n    response: \"\",\n  };\n\n  handleSubmit = (e) => {\n    e.preventDefault();\n\n    const { name, email, message } = this.state;\n\n    let templateParams = {\n      from_name: email,\n      to_name: \"OJOS\",\n      message_html: message,\n      reply_to: email,\n    };\n\n    this.sendEmail(templateParams);\n  };\n\n  sendEmail = (templateParams) => {\n    emailjs.send(\n      SERVICE_ID, \n      TEMPLATE_ID, \n      templateParams,\n      USER_ID\n      )\n      .then((response) => {\n        this.setState({ response : response.status + \" \" + response.text });\n        this.resetForm();\n        console.log('SUCCESS!', response.status, response.text);\n      }, (error) => {\n        this.setState({ response : error.text });\n        console.log('FAILED...', error);\n    });\n  }\n\n  resetForm() {\n    this.setState({\n      name: \"\",\n      email: \"\",\n      message: \"\",\n    });\n  }\n\n  handleChange = (e) => {\n    this.setState({ [e.target.name]: e.target.value });\n  };\n\n  render() {\n    return (\n      <section className=\"sub-section\" id=\"contact\">\n        <div>\n          <form className=\"contact-form\" onSubmit={this.handleSubmit}>\n            <input\n              type=\"text\"\n              name=\"name\"\n              value={this.state.name}\n              onChange={this.handleChange}\n              placeholder=\"Name\"\n              className=\"contact-form-input\"\n            />\n            <input\n              required\n              type=\"email\"\n              name=\"email\"\n              value={this.state.email}\n              onChange={this.handleChange}\n              placeholder=\"Email\"\n              className=\"contact-form-input\"\n            />\n            <textarea\n              required\n              rows=\"10\"\n              name=\"message\"\n              value={this.state.message}\n              onChange={this.handleChange}\n              placeholder=\"Message\"\n              className=\"contact-form-input\"\n            />\n            <button type=\"submit\" className=\"contact-form-input-button\">\n              Send\n            </button>\n            <div>{this.state.response ? this.state.response : \" \"}</div>\n          </form>\n        </div>\n      </section>\n    );\n  }\n}\n\nexport default Form;\n"]},"metadata":{},"sourceType":"module"}